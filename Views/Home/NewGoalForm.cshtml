@using System.Activities.Expressions
@using System.Web.UI.WebControls
@model BodyCompositionCalculator.Models.Goal


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<head>
    <script src="https://kit.fontawesome.com/7ec14fb925.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    @Styles.Render("~/Content/datepicker")
</head>


<html lang="en">

<body>

    <h2>Edit Goal</h2>

    @using (Html.BeginForm("AddNewGoal", "Home"))
    {
        <label>Start Date</label>
        <div id="startDate" , class="form-group input-group date datepicker">
            @Html.TextBoxFor(model => model.StartDate, "{0: dd MMM yyyy}", new { @class = "form-control" })
            <div class="input-group-append input-group-addon">
                <span class="input-group-text">
                    <span class="fa fa-calendar"></span>
                </span>
            </div>
        </div>
        @Html.ValidationMessageFor(m => m.StartDate)


        <label>End Date</label>
        //TODO - Add a validation class that alerts the user than the end date must be greater than the start date
        <div id="endDate" , class="form-group input-group date datepicker">
            @Html.TextBoxFor(model => model.EndDate, "{0: dd MMM yyyy}", new { @class = "form-control" })
            <div class="input-group-append input-group-addon">
                <span class="input-group-text">
                    <span class="fa fa-calendar"></span>
                </span>
            </div>
        </div>
        @Html.ValidationMessageFor(m => m.EndDate)


        @*<p>Working Backup</p>
            <div class="input-group date datepicker">
                @Html.TextBoxFor(model => model.EndDate, "{0: dd MMM yyyy}", new { @class = "form-control", @id = "startDate" })
                <div class="input-group-append input-group-addon">
                    <span class="input-group-text"><span class="fa fa-calendar"></span></span>
                </div>
            </div>

                        @*<div class="input-group date datepicker">
                @Html.TextBoxFor(model => model.EndDate, "{0: dd MMM yyyy}", new { @class = "form-control", @id = "startDate" })
                <span class="input-group-addon">
                    <i class="input-group-text fas fa-calendar-alt  "> </i>
                </span>
            </div>*@


        <div class="form-group">
            <label>Starting Weight</label>
            @Html.TextBoxFor(m => m.StartWeightInKg, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.StartWeightInKg)
        </div>

        <div class="form-group">
            <label>Target Weight</label>
            @Html.TextBoxFor(m => m.TargetWeightInKg, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TargetWeightInKg)
        </div>

        <div class="form-group">
            <label>Starting Body Fat</label>
            @Html.TextBoxFor(m => m.StartBodyFat, new { @class = "form-control" })

            @Html.ValidationMessageFor(m => m.StartBodyFat)
        </div>

        <div class="form-group">
            <label>Target Body Fat</label>
            @Html.TextBoxFor(m => m.TargetBodyFat, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TargetBodyFat)
        </div>


        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.UserProfileId)
        @Html.HiddenFor(m => m.FinalWeightInKg)
        @Html.HiddenFor(m => m.FinalBodyFat)
        @Html.AntiForgeryToken()
        ;


        <button type="submit" class="btn btn-primary">Save</button>
    }


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    <script>

        $(document).ready(function () {

            $('#startDate.datepicker').datepicker({
                format: 'dd M yyyy',
                todayBtn: true,
                autoclose: true,
                todayHighlight: true
            }).on('changeDate', function (selected) {
                var minDateSelectable = new Date(selected.date.valueOf());
                var minDate = new Date(selected.date.valueOf() + (1000 * 60 * 60 * 24 * 7));
                $('#endDate').datepicker({ format: 'dd M yyyy' }); // <--THIS IS THE LINE ADDED
                $('#endDate').datepicker('setStartDate', minDateSelectable);
                $('#endDate').datepicker('setDate', minDate); // <--THIS IS THE LINE ADDED
                //$(this).datepicker('hide');
            })
                ;

            $('#endDate').datepicker({
                format: 'dd M yyyy',
                todayBtn: true,
                autoclose: true,
                todayHighlight: true
            });

        });

    </script>

</body>

</html>
