@using System.Activities.Expressions
@using System.Web.UI.WebControls
@model BodyCompositionCalculator.Models.ViewModels.EditProfileFormViewModel

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html>

    <head>
        <script src="https://kit.fontawesome.com/7ec14fb925.js" crossorigin="anonymous"></script>
        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
        @Styles.Render("~/Content/datepicker")
    </head>
    <body>
        <h2>Create Profile</h2>

        @*Without using the using keyword, the form (which is html form type) would remain open as it's not automatically closed.*@
        @using (Html.BeginForm("Create", "Profile"))
        {
            @Html.ValidationSummary(true, "Please fix the following errors:")
            <div class="form-group">
                @Html.LabelFor(m => m.UserProfile.FirstName)
                @Html.TextBoxFor(m => m.UserProfile.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.UserProfile.FirstName)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.UserProfile.LastName)
                @Html.TextBoxFor(m => m.UserProfile.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.UserProfile.LastName)
            </div>
            <div class="form-group">
                <label>Date of Birth</label>
                <div class="form-group">
                    <div id="dateOfBirth" , class="input-group date datepicker">
                        @Html.TextBoxFor(model => model.UserProfile.DateOfBirth, "{0: dd MMM yyyy}", new { @class = "form-control" })
                        <div class="input-group-append input-group-addon">
                            <span class="input-group-text">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.UserProfile.DateOfBirth)
                </div>
            </div>
            <div class="form-group">
                <label>Sex</label>
                @Html.DropDownListFor(m => m.UserProfile.SexId,
                    new SelectList(Model.Sexes, "Id", "Name"),
                    "Select Sex",
                    new { @class = "form-control" }
                    )

                @Html.ValidationMessageFor(c => c.UserProfile.Sex)
            </div>
            <div class="form-group">
                <label>Height Unit</label>
                @Html.DropDownListFor(m => m.UserProfile.HeightUnitId,
                    new SelectList(Model.HeightUnits, "Id", "Name"),
                    "Select Height Unit",
                    new { @class = "form-control" }
                    )
                @Html.ValidationMessageFor(c => c.UserProfile.HeightUnit)
            </div>
            <div class="form-group">
                <label>Weight Unit</label>
                @Html.DropDownListFor(m => m.UserProfile.WeightUnitId,
                    new SelectList(Model.WeightUnits, "Id", "Name"),
                    "Select Weight Unit",
                    new { @class = "form-control" }
                    )

                @Html.ValidationMessageFor(c => c.UserProfile.WeightUnitId)
            </div>
            //TODO Add option for feet and inches
            <div class="form-group">
                <label>Height In Cm</label>
                @Html.TextBoxFor(m => m.UserProfile.HeightInCm, new { @class = "form-control", @id = "height" })

                @Html.ValidationMessageFor(c => c.UserProfile.HeightInCm)
            </div>
            <div class="form-group">
                <label>Activity Level</label>
                @Html.DropDownListFor(m => m.UserProfile.ActivityLevelId,
                    new SelectList(Model.ActivityLevels, "Id", "Name"),
                    "Select Activity Level",
                    new { @class = "form-control" }
                    )
                @Html.ValidationMessageFor(c => c.UserProfile.ActivityLevel)
            </div>


            @Html.HiddenFor(m => m.UserProfile.Id)
            @Html.HiddenFor(m => m.UserProfile.ApplicationUserId)


            @*<div class="form-group">
                <label>Membership Type</label>
                @Html.DropDownListFor(m => m.Customer.MembershipTypeId, //Doesn't seem to matter what is put here
                    new SelectList(Model.MembershipTypes, "Id", "Name"), //list of items for dropdown list
                    "Select Membership Type",
                    new { @class = "form-control" }
                    )
                @Html.ValidationMessageFor(c => c.Customer.MembershipTypeId)
            </div>






            <div class="checkbox">

                <label>
                    @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter?
                </label>
            </div>



            @Html.AntiForgeryToken();*@

            <button type="submit" class="btn btn-primary">Save</button>

            <p>Info here regarding activitty type </p>

            }


        <script>

            $(document).ready(function () {


                var height = $('#height').val();
                var activity = $('#activity').val();

                if (height == 0) {
                    $('#height').val("");
                }
                if (activity == 0) {
                    $('#activity').val("");
                };

                $('#dateOfBirth.datepicker').datepicker({
                    format: 'dd M yyyy',
                    todayBtn: true,
                    autoclose: true,
                    todayHighlight: true
                });


                var dateOfBirth = $('#dateOfBirth').datepicker('getDate');
                console.log(dateOfBirth.getTime());
                if (dateOfBirth.getTime() == -62135596740000) {
                    $('#dateOfBirth').datepicker('clearDates');
                }


            });
        </script>

    </body>

<html>

@section scripts{

    @Scripts.Render("~/bundles/jqueryval")

}